#!/bin/bash

set -e

printf '%s' "Configure Cloud One Smart Check namespace"

kubectl create namespace ${DSSC_NAMESPACE} --dry-run=client -o yaml | kubectl apply -f - > /dev/null

printf ' - %s\n' "configured"

printf '%s' "Configure Smart Check overrides"

DSSC_TEMPPW='justatemppw'
cat <<EOF >./overrides-image-security.yml
##
## Default value: (none)
activationCode: '${DSSC_AC}'
auth:
  ## secretSeed is used as part of the password generation process for
  ## all auto-generated internal passwords, ensuring that each installation of
  ## Deep Security Smart Check has different passwords.
  ##
  ## Default value: {must be provided by the installer}
  secretSeed: 'just_anything-really_anything'
  ## userName is the name of the default administrator user that the system creates on startup.
  ## If a user with this name already exists, no action will be taken.
  ##
  ## Default value: administrator
  ## userName: administrator
  userName: '${DSSC_USERNAME}'
  ## password is the password assigned to the default administrator that the system creates on startup.
  ## If a user with the name 'auth.userName' already exists, no action will be taken.
  ##
  ## Default value: a generated password derived from the secretSeed and system details
  ## password: # autogenerated
  password: '${DSSC_TEMPPW}'
service:
  ## type is the Kubernetes Service type for the proxy service that acts as
  ## an entry point to the system.
  type: NodePort
  ## httpsPort is the port where the service will listen for HTTPS requests.
  httpsPort: 443
  ## httpPort is the port where the service will listen for HTTP requests.
  ## The service will automatically redirect all HTTP requests to HTTPS.
  httpPort: 80
EOF

printf ' - %s\n' "configured"

if [ "$(helm --namespace ${DSSC_NAMESPACE} list -q | grep deep)" != "" ] ;
  then
    printf '%s' "Upgrading Cloud One Smart Check"
    helm upgrade --namespace ${DSSC_NAMESPACE} \
      --values overrides-image-security.yml \
      deepsecurity-smartcheck \
      https://github.com/deep-security/smartcheck-helm/archive/master.tar.gz \
      --reuse-values > /dev/null
    printf ' - %s\n' "upgraded"
  else
    printf '%s' "Installing Cloud One Smart Check"
    helm install --namespace ${DSSC_NAMESPACE} \
      --values overrides-image-security.yml \
      deepsecurity-smartcheck \
      https://github.com/deep-security/smartcheck-helm/archive/master.tar.gz > /dev/null
    printf ' - %s\n' "installed"
fi

printf '%s' "Waiting for Cloud One Smart Check to be in active state"

SMARTCHECK_DEPLOYMENTS=$(kubectl -n smartcheck get deployments | grep -c "/")

while [ $(kubectl -n smartcheck get deployments | grep -cE "1/1|2/2") -ne ${SMARTCHECK_DEPLOYMENTS} ]
do
  printf '%s' "."
  sleep 2
done

printf ' - %s\n' "active"
